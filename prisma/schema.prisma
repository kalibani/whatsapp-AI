generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model User {
  id              String         @id @default(cuid())
  clerkId         String         @unique
  email           String         @unique
  firstName       String?
  lastName        String?
  phone           String?
  imageUrl        String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  clientKey       String?
  berryLabsUserId String?
  agents          Agent[]
  subscriptions   Subscription[]
  orders          Order[]

  @@map("users")
}

model Agent {
  id          String   @id @default(cuid())
  name        String
  description String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("agents")
}

model Subscription {
  id               String   @id @default(cuid())
  userId           String
  packageId        String
  subscriptionId   String   @unique // BerryLabs subscription_id
  packageName      String
  status           String
  totalAmount      String
  subsType         String?
  organizationId   String?
  subOrganizationId String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders           Order[]

  @@map("subscriptions")
}

model Order {
  id               String        @id @default(cuid())
  userId           String
  subscriptionId   String?
  orderId          String        @unique // BerryLabs order_id
  packageId        String
  orderNo          String
  packageName      String
  orderDate        DateTime
  status           String
  totalAmount      String
  organizationId   String?
  subOrganizationId String?
  subsType         String?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  user             User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  subscription     Subscription? @relation(fields: [subscriptionId], references: [id])

  @@map("orders")
}
